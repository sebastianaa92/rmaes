data < read.csv("C:\Users\sebastianaa\OneDrive - Universidad de la Sabana (2)\Maestría Analítica Aplicada\Metodos_estadisticos_avanzados_1\Proyectos_R_Studio\DBs\Coldplay.csv")
data < read.csv("C:/Users/sebastianaa/OneDrive - Universidad de la Sabana (2)/Maestría Analítica Aplicada/Metodos_estadisticos_avanzados_1/Proyectos_R_Studio/DBs/Coldplay.csv")
data = read.csv("C:/Users/sebastianaa/OneDrive - Universidad de la Sabana (2)/Maestría Analítica Aplicada/Metodos_estadisticos_avanzados_1/Proyectos_R_Studio/DBs/Coldplay.csv")
clear
data <- read.csv("C:/Users/sebastianaa/OneDrive - Universidad de la Sabana (2)/Maestría Analítica Aplicada/Metodos_estadisticos_avanzados_1/Proyectos_R_Studio/DBs/Coldplay.csv")
install.packages('tinytex')
tinytex::install_tinytex()
install.packages('tinytex')
tinytex::install_tinytex()
#El númeral en R sirve para comentar
#Limpieza de memoria
rm(list = ls())
data <- read.csv("C:/Users/sebastianaa/OneDrive - Universidad de la Sabana (2)/Maestría Analítica Aplicada/Metodos_estadisticos_avanzados_1/Proyectos_R_Studio/DBs/Coldplay.csv")
View(data)
View(data)
install.packages("dplyr")
library("dplyr")
filtrado <- data %=% filter(album_name="Parachutes")
filtrado <- data = filter(album_name="Parachutes")
filtrado <- data = filter(album_name=="Parachutes")
data <- read.csv("C:/Users/sebastianaa/OneDrive - Universidad de la Sabana (2)/Maestría Analítica Aplicada/Metodos_estadisticos_avanzados_1/Proyectos_R_Studio/DBs/Coldplay.csv")
summary(data)
data <- read.csv("C:/Users/sebastianaa/OneDrive - Universidad de la Sabana (2)/Maestría Analítica Aplicada/Metodos_estadisticos_avanzados_1/Proyectos_R_Studio/DBs/Coldplay.csv")
summary(data)
str(data)
filtrado <- data %>% filter(album_name=="Parachutes")
filtrado
str(cp)
str(data)
ni=cp[5,14]
ni=data[5,14]
ni
View("ni")
View(ni)
data2 = cp[,-c(1,3,4)]
data2 = data[,-c(1,3,4)]
data2
View(data2)
install.packages("MASS","nortest","readxl,"IMTest)
install.packages("MASS","nortest","readxl","IMTest"")
EXIT
exit
clear
install.packages("MASS","readxl","IMTest","nortest")
install.packages(c("MASS", "readxl", "IMTest", "nortest"))
media
media = mean(data$valence)
media
summary(cp$valence)
summary(data$valence)
summary(data$valence)
round(summary(data$valence))
round(summary(data$valence),digits = 2)
round(summary(data$valence),digits = 1)
hist(data$valence)
hist(data$valence ,main = "Histograma", xlab = "Valence", col= "darkblue", border= "black")
hist(data$valence ,main = "Histograma", xlab = "Valence", col= "darkblue", border= "white")
hist(data$valence ,main = "Histograma", xlab = "Valence","coso", col= "darkblue", border= "white")
hist(data$valence ,main = "Histograma", xlab = "Valence",ylab = "Frecuencia", col= "darkblue", border= "white")
boxplot(data$)
boxplot(data$valence)
hist(data$valence ,main = "Histograma", xlab = "Valence",ylab = "Frecuencia", col= "darkblue", border= "white")
boxplot(data$valence, horizontal = T)
boxplot(data$valence, horizontal = T, clol = "darkblue")
boxplot(data$valence, horizontal = T, col = "darkblue")
#Para saber cuales son los cuartiles
quantile(data$valence)
#Para saber el decil
quantile(data$valence,0.10)
#Función para hacer boxplot
boxplot(data$valence, horizontal = T, col = "darkblue", border = "white")
#Función para hacer boxplot
boxplot(data$valence, horizontal = T, col = "darkblue", border = "black")
filtros
filtros <- data %>% filter(album_name == "Parachutes")
filtros
View(filtros)
as.data.frame(nombrealbum)
nombrealbum = table(cp$album_name)
nombrealbum = table(data$album_name)
album = as.data.frame(nombrealbum)
album
al1=filter(data$album_name == "Parachutes")
album = as.data.frame(nombrealbum)
al1=filter(data$album_name == "Parachutes")
al1 = filter(data, data$album_name == "Parachutes")
View(al1)
View(album)
View(al1)
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
plot(pressure)
rm(list=ls())
df = read.csv("C:/Users/sebastianaa/OneDrive - Universidad de la Sabana (2)/Maestría Analítica Aplicada/Metodos_estadisticos_avanzados_1/Proyectos_R_Studio/DBs/Saber.csv")
summary(df)
library(dplyr)
filas_NA = sum(!complete.cases(df))
filas_NA
filas_NA / nrow(df)
df_limpio = na.omit(df)
porcentaje_na = sum(is.na(df$PUNT_INGLES)) / nrow(df) * 100
filas_NA = sum(!complete.cases(df_limpio))
filas_NA
View(df_limpio)
set.seed(123)
n = 1000
muestra = df_limpio[sample(1:nrow(df_limpio), n), ]
View(muestra)
if(porcentaje_na) < 0.010{
